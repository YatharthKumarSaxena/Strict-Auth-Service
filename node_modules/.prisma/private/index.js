
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/library.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.1
 * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
 */
Prisma.prismaVersion = {
  client: "6.11.1",
  engine: "f40f79ec31188888a2e33acda0ecc8fd10a853a9"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}




  const path = require('path')

/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.DeviceRateLimitScalarFieldEnum = {
  deviceID: 'deviceID',
  attempts: 'attempts',
  lastAttemptAt: 'lastAttemptAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AuthLogSchemaScalarFieldEnum = {
  id: 'id',
  userID: 'userID',
  eventType: 'eventType',
  deviceID: 'deviceID',
  deviceName: 'deviceName',
  deviceType: 'deviceType',
  performedBy: 'performedBy',
  timestamp: 'timestamp'
};

exports.Prisma.AdminActionScalarFieldEnum = {
  id: 'id',
  targetUserID: 'targetUserID',
  reason: 'reason',
  filter: 'filter'
};

exports.Prisma.CounterSchemaScalarFieldEnum = {
  id: 'id',
  seq: 'seq'
};

exports.Prisma.RateLimitSchemaScalarFieldEnum = {
  deviceID: 'deviceID',
  routeKey: 'routeKey',
  requestCount: 'requestCount',
  lastRequestAt: 'lastRequestAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.AuthLogEvent = exports.$Enums.AuthLogEvent = {
  LOGIN: 'LOGIN',
  LOGOUT_ALL_DEVICE: 'LOGOUT_ALL_DEVICE',
  ACTIVATE: 'ACTIVATE',
  DEACTIVATE: 'DEACTIVATE',
  BLOCKED: 'BLOCKED',
  UNBLOCKED: 'UNBLOCKED',
  CHANGE_PASSWORD: 'CHANGE_PASSWORD',
  REGISTER: 'REGISTER',
  LOGOUT_SPECIFIC_DEVICE: 'LOGOUT_SPECIFIC_DEVICE',
  CHECK_AUTH_LOGS: 'CHECK_AUTH_LOGS',
  GET_USER_ACTIVE_DEVICES: 'GET_USER_ACTIVE_DEVICES',
  GET_MY_ACTIVE_DEVICES: 'GET_MY_ACTIVE_DEVICES',
  ACCESS_TOKEN: 'ACCESS_TOKEN',
  REFRESH_TOKEN: 'REFRESH_TOKEN',
  UPDATE_ACCOUNT_DETAILS: 'UPDATE_ACCOUNT_DETAILS',
  PROVIDE_USER_ACCOUNT_DETAILS: 'PROVIDE_USER_ACCOUNT_DETAILS',
  PROVIDE_MY_ACCOUNT_DETAILS: 'PROVIDE_MY_ACCOUNT_DETAILS',
  GET_TOTAL_REGISTERED_USERS: 'GET_TOTAL_REGISTERED_USERS',
  SET_REFRESH_TOKEN_FOR_ADMIN: 'SET_REFRESH_TOKEN_FOR_ADMIN',
  CLEAN_UP_DEACTIVATED_USER: 'CLEAN_UP_DEACTIVATED_USER',
  CLEAN_UP_AUTH_LOGS: 'CLEAN_UP_AUTH_LOGS'
};

exports.DeviceType = exports.$Enums.DeviceType = {
  LAPTOP: 'LAPTOP',
  MOBILE: 'MOBILE',
  TABLET: 'TABLET'
};

exports.PerformedBy = exports.$Enums.PerformedBy = {
  CUSTOMER: 'CUSTOMER',
  ADMIN: 'ADMIN',
  SYSTEM: 'SYSTEM'
};

exports.Prisma.ModelName = {
  DeviceRateLimit: 'DeviceRateLimit',
  AuthLogSchema: 'AuthLogSchema',
  AdminAction: 'AdminAction',
  counterSchema: 'counterSchema',
  rateLimitSchema: 'rateLimitSchema'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\91945\\Desktop\\Strict-Authentication-Service_Backend\\node_modules\\.prisma\\private",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\91945\\Desktop\\Strict-Authentication-Service_Backend\\prisma\\private\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma/private",
  "clientVersion": "6.11.1",
  "engineVersion": "f40f79ec31188888a2e33acda0ecc8fd10a853a9",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "PRIVATE_DB_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../../node_modules/.prisma/private\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"PRIVATE_DB_URL\") // Comes from your .env file\n}\n\nenum AuthLogEvent {\n  LOGIN\n  LOGOUT_ALL_DEVICE\n  ACTIVATE\n  DEACTIVATE\n  BLOCKED\n  UNBLOCKED\n  CHANGE_PASSWORD\n  REGISTER\n  LOGOUT_SPECIFIC_DEVICE\n  CHECK_AUTH_LOGS\n  GET_USER_ACTIVE_DEVICES\n  GET_MY_ACTIVE_DEVICES\n  ACCESS_TOKEN\n  REFRESH_TOKEN\n  UPDATE_ACCOUNT_DETAILS\n  PROVIDE_USER_ACCOUNT_DETAILS\n  PROVIDE_MY_ACCOUNT_DETAILS\n  GET_TOTAL_REGISTERED_USERS\n  SET_REFRESH_TOKEN_FOR_ADMIN\n  CLEAN_UP_DEACTIVATED_USER\n  CLEAN_UP_AUTH_LOGS\n}\n\nenum DeviceType {\n  LAPTOP\n  MOBILE\n  TABLET\n}\n\nenum PerformedBy {\n  CUSTOMER\n  ADMIN\n  SYSTEM\n}\n\nmodel DeviceRateLimit {\n  deviceID      String   @id\n  attempts      Int      @default(1)\n  lastAttemptAt DateTime @default(now())\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n}\n\nmodel AuthLogSchema {\n  id          Int          @id @default(autoincrement())\n  userID      String\n  eventType   AuthLogEvent\n  deviceID    String\n  deviceName  String?\n  deviceType  DeviceType?\n  performedBy PerformedBy  @default(CUSTOMER)\n  timestamp   DateTime     @default(now())\n  adminAction AdminAction?\n\n  @@index([userID])\n}\n\nmodel AdminAction {\n  id           Int            @id\n  authLog      AuthLogSchema  @relation(fields: [id], references: [id])\n  targetUserID String?\n  reason       String?\n  filter       AuthLogEvent[]\n}\n\nmodel counterSchema {\n  id  String @id\n  seq Int    @default(0)\n}\n\nmodel rateLimitSchema {\n  deviceID      String\n  routeKey      String\n  requestCount  Int      @default(1)\n  lastRequestAt DateTime @default(now())\n\n  @@id([deviceID, routeKey])\n}\n",
  "inlineSchemaHash": "52c5d477f7e453368c77cb0035d3b199a03502b6a5bf03b7423de83e84ba53a8",
  "copyEngine": true
}

const fs = require('fs')

config.dirname = __dirname
if (!fs.existsSync(path.join(__dirname, 'schema.prisma'))) {
  const alternativePaths = [
    "node_modules/.prisma/private",
    ".prisma/private",
  ]
  
  const alternativePath = alternativePaths.find((altPath) => {
    return fs.existsSync(path.join(process.cwd(), altPath, 'schema.prisma'))
  }) ?? alternativePaths[0]

  config.dirname = path.join(process.cwd(), alternativePath)
  config.isBundled = true
}

config.runtimeDataModel = JSON.parse("{\"models\":{\"DeviceRateLimit\":{\"dbName\":null,\"schema\":null,\"fields\":[{\"name\":\"deviceID\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":true,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"attempts\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"Int\",\"nativeType\":null,\"default\":1,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"lastAttemptAt\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"DateTime\",\"nativeType\":null,\"default\":{\"name\":\"now\",\"args\":[]},\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"DateTime\",\"nativeType\":null,\"default\":{\"name\":\"now\",\"args\":[]},\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"DateTime\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":true}],\"primaryKey\":null,\"uniqueFields\":[],\"uniqueIndexes\":[],\"isGenerated\":false},\"AuthLogSchema\":{\"dbName\":null,\"schema\":null,\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":true,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"Int\",\"nativeType\":null,\"default\":{\"name\":\"autoincrement\",\"args\":[]},\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"userID\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"eventType\",\"kind\":\"enum\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"AuthLogEvent\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"deviceID\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"deviceName\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"deviceType\",\"kind\":\"enum\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"DeviceType\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"performedBy\",\"kind\":\"enum\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"PerformedBy\",\"nativeType\":null,\"default\":\"CUSTOMER\",\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"DateTime\",\"nativeType\":null,\"default\":{\"name\":\"now\",\"args\":[]},\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"adminAction\",\"kind\":\"object\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"AdminAction\",\"nativeType\":null,\"relationName\":\"AdminActionToAuthLogSchema\",\"relationFromFields\":[],\"relationToFields\":[],\"isGenerated\":false,\"isUpdatedAt\":false}],\"primaryKey\":null,\"uniqueFields\":[],\"uniqueIndexes\":[],\"isGenerated\":false},\"AdminAction\":{\"dbName\":null,\"schema\":null,\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":true,\"isReadOnly\":true,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"authLog\",\"kind\":\"object\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"AuthLogSchema\",\"nativeType\":null,\"relationName\":\"AdminActionToAuthLogSchema\",\"relationFromFields\":[\"id\"],\"relationToFields\":[\"id\"],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"targetUserID\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"reason\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"filter\",\"kind\":\"enum\",\"isList\":true,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"AuthLogEvent\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false}],\"primaryKey\":null,\"uniqueFields\":[],\"uniqueIndexes\":[],\"isGenerated\":false},\"counterSchema\":{\"dbName\":null,\"schema\":null,\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":true,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"seq\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"Int\",\"nativeType\":null,\"default\":0,\"isGenerated\":false,\"isUpdatedAt\":false}],\"primaryKey\":null,\"uniqueFields\":[],\"uniqueIndexes\":[],\"isGenerated\":false},\"rateLimitSchema\":{\"dbName\":null,\"schema\":null,\"fields\":[{\"name\":\"deviceID\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"routeKey\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":null,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"requestCount\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"Int\",\"nativeType\":null,\"default\":1,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"lastRequestAt\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"DateTime\",\"nativeType\":null,\"default\":{\"name\":\"now\",\"args\":[]},\"isGenerated\":false,\"isUpdatedAt\":false}],\"primaryKey\":{\"name\":null,\"fields\":[\"deviceID\",\"routeKey\"]},\"uniqueFields\":[],\"uniqueIndexes\":[],\"isGenerated\":false}},\"enums\":{\"AuthLogEvent\":{\"values\":[{\"name\":\"LOGIN\",\"dbName\":null},{\"name\":\"LOGOUT_ALL_DEVICE\",\"dbName\":null},{\"name\":\"ACTIVATE\",\"dbName\":null},{\"name\":\"DEACTIVATE\",\"dbName\":null},{\"name\":\"BLOCKED\",\"dbName\":null},{\"name\":\"UNBLOCKED\",\"dbName\":null},{\"name\":\"CHANGE_PASSWORD\",\"dbName\":null},{\"name\":\"REGISTER\",\"dbName\":null},{\"name\":\"LOGOUT_SPECIFIC_DEVICE\",\"dbName\":null},{\"name\":\"CHECK_AUTH_LOGS\",\"dbName\":null},{\"name\":\"GET_USER_ACTIVE_DEVICES\",\"dbName\":null},{\"name\":\"GET_MY_ACTIVE_DEVICES\",\"dbName\":null},{\"name\":\"ACCESS_TOKEN\",\"dbName\":null},{\"name\":\"REFRESH_TOKEN\",\"dbName\":null},{\"name\":\"UPDATE_ACCOUNT_DETAILS\",\"dbName\":null},{\"name\":\"PROVIDE_USER_ACCOUNT_DETAILS\",\"dbName\":null},{\"name\":\"PROVIDE_MY_ACCOUNT_DETAILS\",\"dbName\":null},{\"name\":\"GET_TOTAL_REGISTERED_USERS\",\"dbName\":null},{\"name\":\"SET_REFRESH_TOKEN_FOR_ADMIN\",\"dbName\":null},{\"name\":\"CLEAN_UP_DEACTIVATED_USER\",\"dbName\":null},{\"name\":\"CLEAN_UP_AUTH_LOGS\",\"dbName\":null}],\"dbName\":null},\"DeviceType\":{\"values\":[{\"name\":\"LAPTOP\",\"dbName\":null},{\"name\":\"MOBILE\",\"dbName\":null},{\"name\":\"TABLET\",\"dbName\":null}],\"dbName\":null},\"PerformedBy\":{\"values\":[{\"name\":\"CUSTOMER\",\"dbName\":null},{\"name\":\"ADMIN\",\"dbName\":null},{\"name\":\"SYSTEM\",\"dbName\":null}],\"dbName\":null}},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = undefined


const { warnEnvConflicts } = require('./runtime/library.js')

warnEnvConflicts({
    rootEnvPath: config.relativeEnvPaths.rootEnvPath && path.resolve(config.dirname, config.relativeEnvPaths.rootEnvPath),
    schemaEnvPath: config.relativeEnvPaths.schemaEnvPath && path.resolve(config.dirname, config.relativeEnvPaths.schemaEnvPath)
})

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

// file annotations for bundling tools to include these files
path.join(__dirname, "query_engine-windows.dll.node");
path.join(process.cwd(), "node_modules/.prisma/private/query_engine-windows.dll.node")
// file annotations for bundling tools to include these files
path.join(__dirname, "schema.prisma");
path.join(process.cwd(), "node_modules/.prisma/private/schema.prisma")
