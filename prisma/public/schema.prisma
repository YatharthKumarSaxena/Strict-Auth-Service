generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/public"
}

datasource db {
  provider = "postgresql"
  url      = env("PUBLIC_DB_URL") // Comes from your .env file
}

enum UserType {
  CUSTOMER
  ADMIN
}

enum ViaType {
  USER_ID
  PHONE
  EMAIL
}

enum DeviceType {
  MOBILE
  LAPTOP
  TABLET
}

enum BlockReason {
  POLICY_VIOLATION
  SPAM_ACTIVITY
  HARASSMENT
  FRAUDULENT_BEHAVIOR
  SUSPICIOUS_LOGIN
  OTHER
}

enum UnblockReason {
  MANUAL_REVIEW_PASSED
  USER_APPEAL_GRANTED
  SYSTEM_ERROR
  OTHER
}

model User {
  id                String         @id @default(uuid())  // ðŸ‘ˆ Primary UUID for internal reference
  name              String?
  fullPhoneNumber   String         @unique
  password          String
  userID            String         @unique
  emailID           String         @unique
  isActive          Boolean        @default(true)
  isBlocked         Boolean        @default(false)
  isVerified        Boolean        @default(false)
  userType          UserType       @default(CUSTOMER)
  loginCount        Int            @default(0)
  blockedVia        ViaType?
  unblockedVia      ViaType?
  blockReason       BlockReason?
  blockCount        Int            @default(0)
  unblockCount      Int            @default(0)
  unblockReason     UnblockReason?
  blockedBy         String?
  unblockedBy       String?
  blockedAt         DateTime?
  unblockedAt       DateTime?
  lastActivatedAt   DateTime       @default(now())
  lastDeactivatedAt DateTime?
  lastLogin         DateTime?
  lastLogout        DateTime?
  jwtTokenIssuedAt  DateTime?
  passwordChangedAt DateTime?
  phoneNumber       PhoneNumber?
  device            Device?
  otp               OTP?
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
}

model PhoneNumber {
  userID      String     @id
  countryCode String
  number      String
  user        User       @relation(fields: [userID], references: [userID])
}

model Device {
  deviceID     String      @id
  deviceName   String?
  deviceType   DeviceType?
  requestCount Int         @default(1)
  addedAt      DateTime    @default(now())
  lastUsedAt   DateTime?
  userID       String      @unique
  user         User        @relation(fields: [userID], references: [userID])
}

model OTP {
  id          Int        @id @default(autoincrement())
  code        String
  expiresAt   DateTime
  verified    Boolean    @default(false)
  resendCount Int        @default(0)
  userID      String     @unique
  user        User       @relation(fields: [userID], references: [userID])
}
